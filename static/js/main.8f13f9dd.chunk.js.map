{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","isValid","onChange","useState","Math","random","toString","slice","id","touched","setToched","verified","setVerified","hasInvalidUrl","hasError","fieldVerified","inputValidation","event","newValue","target","test","htmlFor","classNames","type","placeholder","onBlur","NewMovie","onAdd","count","increaseCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isDisabled","setIsDisabled","isVerified","setIsVerified","useEffect","trim","length","handlerOnSubmit","preventDefault","prevState","onSubmit","veriied","disabled","App","moviesFromServer","setMovies","moviePrompt","newMovie","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f13f9dd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  isValid?: boolean,\n  onChange?: (newValue: string, verified: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  isValid = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const hasInvalidUrl = touched && isValid && !verified;\n  const hasError = touched && required && !value;\n  let fieldVerified = false;\n\n  const inputValidation = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      if (pattern.test(newValue)) {\n        fieldVerified = true;\n      } else {\n        fieldVerified = false;\n      }\n    }\n\n    setVerified(fieldVerified);\n\n    return onChange(event.target.value, fieldVerified);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasInvalidUrl,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => inputValidation(event)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {(hasError || hasInvalidUrl) && (\n        <p className=\"help is-danger\">\n          {`${label} is ${hasError ? 'required' : 'invalid'}`}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, increaseCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isVerified, setIsVerified] = useState(false);\n\n  useEffect(() => {\n    if (title.trim().length\n      && description.trim().length\n      && imgUrl.length\n      && imdbUrl.length\n      && imdbId.length\n      && isVerified\n    ) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  });\n\n  const clearData = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n    increaseCount(prevState => prevState + 1);\n    setIsDisabled(true);\n  };\n\n  const handlerOnSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (title !== ' ') {\n      onAdd(newMovie);\n    }\n\n    clearData();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => {\n        handlerOnSubmit(event);\n      }}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newValue) => {\n          setTitle(newValue);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newValue) => {\n          setDescription(newValue);\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        required\n        isValid\n        onChange={(newValue, verified) => {\n          setIsVerified(verified);\n          setImgUrl(newValue);\n        }}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        required\n        isValid\n        onChange={(newValue, veriied) => {\n          setIsVerified(veriied);\n          setImdbUrl(newValue);\n        }}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        required\n        onChange={(newValue) => {\n          setImdbId(newValue);\n        }}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const moviePrompt: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [newMovie, addMovie] = useState(moviePrompt);\n\n  useEffect(() => {\n    if (newMovie.title.length) {\n      setMovies([...movies, newMovie]);\n      addMovie(moviePrompt);\n    }\n  });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}